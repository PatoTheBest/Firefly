From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Mark Vainomaa <mikroskeem@mikroskeem.eu>
Date: Tue, 26 Nov 2019 19:51:00 +0200
Subject: [PATCH] Attempt to make supported protocol id checking faster


diff --git a/protocol/src/main/java/net/md_5/bungee/protocol/ProtocolConstants.java b/protocol/src/main/java/net/md_5/bungee/protocol/ProtocolConstants.java
index 7da62425f8e3df2ee9029eb8c6c218eeffb3a9e5..c959282109955d74380ef784e480843ba0d4f590 100644
--- a/protocol/src/main/java/net/md_5/bungee/protocol/ProtocolConstants.java
+++ b/protocol/src/main/java/net/md_5/bungee/protocol/ProtocolConstants.java
@@ -65,6 +65,28 @@ public class ProtocolConstants
             ProtocolConstants.MINECRAFT_1_15_2,
             ProtocolConstants.MINECRAFT_1_16
     );
+    // Firefly start
+    public static final int LOWEST_SUPPORTED_VERSION_ID;
+    public static final int HIGHEST_SUPPORTED_VERSION_ID;
+    private static final boolean[] SUPPORTED_VERSION_IDS_FAST;
+    static {
+        LOWEST_SUPPORTED_VERSION_ID = SUPPORTED_VERSION_IDS.get(0);
+        HIGHEST_SUPPORTED_VERSION_ID = SUPPORTED_VERSION_IDS.get(SUPPORTED_VERSION_IDS.size() - 1);
+        var arraySize = HIGHEST_SUPPORTED_VERSION_ID - LOWEST_SUPPORTED_VERSION_ID + 1;
+        SUPPORTED_VERSION_IDS_FAST = new boolean[arraySize];
+        for (var supportedVersionId : SUPPORTED_VERSION_IDS) {
+            var index = supportedVersionId - LOWEST_SUPPORTED_VERSION_ID;
+            SUPPORTED_VERSION_IDS_FAST[index] = true;
+        }
+    }
+
+    public static boolean isSupportedProtocol(int protocolId) {
+        var protocolIndex = protocolId - LOWEST_SUPPORTED_VERSION_ID;
+        return protocolIndex >= 0 &&
+                protocolIndex < ProtocolConstants.SUPPORTED_VERSION_IDS_FAST.length &&
+                ProtocolConstants.SUPPORTED_VERSION_IDS_FAST[protocolIndex];
+    }
+    // Firefly end
 
     public static final boolean isBeforeOrEq(int before, int other)
     {
diff --git a/proxy/src/main/java/net/md_5/bungee/BungeeCord.java b/proxy/src/main/java/net/md_5/bungee/BungeeCord.java
index 7d33478b2e673e74bb287dc335b727a1d47755d8..48d0b8921b7d590d751b740d9e9152bbb34c969b 100644
--- a/proxy/src/main/java/net/md_5/bungee/BungeeCord.java
+++ b/proxy/src/main/java/net/md_5/bungee/BungeeCord.java
@@ -809,7 +809,7 @@ public class BungeeCord extends ProxyServer
     @Override
     public int getProtocolVersion()
     {
-        return ProtocolConstants.SUPPORTED_VERSION_IDS.get( ProtocolConstants.SUPPORTED_VERSION_IDS.size() - 1 );
+        return ProtocolConstants.HIGHEST_SUPPORTED_VERSION_ID; //SUPPORTED_VERSION_IDS.get( ProtocolConstants.SUPPORTED_VERSION_IDS.size() - 1 ); // Firefly
     }
 
     @Override
diff --git a/proxy/src/main/java/net/md_5/bungee/connection/InitialHandler.java b/proxy/src/main/java/net/md_5/bungee/connection/InitialHandler.java
index e59c3bd051eeb8ad57cadd04f518abf69a1603a8..56455079566c969bacff4ebffb464e022c125043 100644
--- a/proxy/src/main/java/net/md_5/bungee/connection/InitialHandler.java
+++ b/proxy/src/main/java/net/md_5/bungee/connection/InitialHandler.java
@@ -235,7 +235,7 @@ public class InitialHandler extends PacketHandler implements PendingConnection
 
         ServerInfo forced = AbstractReconnectHandler.getForcedHost( this );
         final String motd = ( forced != null ) ? forced.getMotd() : listener.getMotd();
-        final int protocol = ( ProtocolConstants.SUPPORTED_VERSION_IDS.contains( handshake.getProtocolVersion() ) ) ? handshake.getProtocolVersion() : bungee.getProtocolVersion();
+        final int protocol = ( ProtocolConstants.isSupportedProtocol(/*SUPPORTED_VERSION_IDS.contains(*/ handshake.getProtocolVersion() ) ) ? handshake.getProtocolVersion() : bungee.getProtocolVersion(); // Firefly
 
         Callback<ServerPing> pingBack = new Callback<ServerPing>()
         {
@@ -338,7 +338,7 @@ public class InitialHandler extends PacketHandler implements PendingConnection
                 thisState = State.USERNAME;
                 ch.setProtocol( Protocol.LOGIN );
 
-                if ( !ProtocolConstants.SUPPORTED_VERSION_IDS.contains( handshake.getProtocolVersion() ) )
+                if ( !ProtocolConstants.isSupportedProtocol(handshake.getProtocolVersion())) //.SUPPORTED_VERSION_IDS.contains( handshake.getProtocolVersion() ) ) // Firefly
                 {
                     if ( handshake.getProtocolVersion() > bungee.getProtocolVersion() )
                     {
